{
  "frequentWorkflows": {
    "addNewRoute": {
      "description": "신규 라우트 추가 워크플로우",
      "steps": [
        {
          "step": 1,
          "action": "라우트명 결정 (kebab-case)",
          "example": "product-detail, user-profile, admin-dashboard"
        },
        {
          "step": 2,
          "action": "src/views/{route}.html 생성",
          "template": "Vue 템플릿 구조, i18n 키 사용, 컴포넌트 참조"
        },
        {
          "step": 3,
          "action": "src/logic/{route}.js 생성",
          "template": "Vue Options API, mounted/beforeUnmount 라이프사이클"
        },
        {
          "step": 4,
          "action": "src/styles/{route}.css 생성",
          "template": "BEM 네이밍, 반응형 디자인, 다크모드 지원"
        },
        {
          "step": 5,
          "action": "src/layouts/default.html에 네비게이션 추가",
          "condition": "메뉴에 노출되어야 하는 경우"
        },
        {
          "step": 6,
          "action": "node build.cjs build 실행",
          "critical": "routes/ 폴더에 빌드된 파일 생성"
        },
        {
          "step": 7,
          "action": "테스트 확인",
          "urls": [
            "http://127.0.0.1:5500/#/{route}",
            "http://127.0.0.1:5500/production.html#/{route}"
          ]
        }
      ],
      "commonIssues": [
        {
          "issue": "빌드 후 404 에러",
          "cause": "파일명 불일치 또는 구문 오류",
          "solution": "파일명 확인 및 JavaScript 구문 검사"
        },
        {
          "issue": "스타일이 적용되지 않음",
          "cause": "CSS 파일이 PurgeCSS에 의해 제거됨",
          "solution": "사용된 클래스명을 content paths에 추가"
        }
      ]
    },
    "modifyExistingRoute": {
      "description": "기존 라우트 수정 워크플로우",
      "steps": [
        {
          "step": 1,
          "action": "수정할 파일 식별",
          "files": ["src/views/", "src/logic/", "src/styles/"]
        },
        {
          "step": 2,
          "action": "원본 파일 수정",
          "warning": "routes/ 폴더의 파일은 절대 직접 수정 금지"
        },
        {
          "step": 3,
          "action": "빌드 실행으로 반영",
          "command": "node build.cjs build"
        },
        {
          "step": 4,
          "action": "브라우저에서 결과 확인",
          "tip": "캐시 클리어 (?clearCache=all) 사용"
        }
      ]
    },
    "debugPerformanceIssues": {
      "description": "성능 문제 디버깅 워크플로우",
      "approaches": [
        {
          "type": "빌드 시간 최적화",
          "actions": [
            "캐시 상태 확인 (build.cjs info)",
            "불필요한 컴포넌트 제거",
            "CSS 최적화 설정 조정"
          ]
        },
        {
          "type": "런타임 성능 최적화",
          "actions": [
            "컴포넌트 지연 로딩 확인",
            "캐시 히트율 분석",
            "메모리 사용량 모니터링"
          ]
        }
      ]
    },
    "handleBuildErrors": {
      "description": "빌드 에러 해결 워크플로우",
      "errorTypes": [
        {
          "type": "구문 오류 (Syntax Error)",
          "symptoms": "JavaScript 파싱 실패",
          "solution": "해당 .js 파일의 구문 검사 및 수정"
        },
        {
          "type": "의존성 오류 (Dependency Error)",
          "symptoms": "컴포넌트 또는 모듈을 찾을 수 없음",
          "solution": "import 경로 확인 및 파일 존재성 검증"
        },
        {
          "type": "CSS 처리 오류",
          "symptoms": "PurgeCSS 또는 CleanCSS 실패",
          "solution": "CSS 구문 확인 및 safelist 설정 검토"
        }
      ],
      "generalSteps": [
        "에러 로그 분석",
        "관련 원본 파일 확인",
        "구문 및 의존성 검증",
        "수정 후 재빌드",
        "캐시 클리어 후 테스트"
      ]
    }
  },
  "developmentPatterns": {
    "componentIntegration": {
      "description": "컴포넌트 통합 패턴",
      "development": {
        "usage": "개별 컴포넌트 파일 동적 임포트",
        "debugging": "각 컴포넌트 개별 로딩으로 디버깅 용이"
      },
      "production": {
        "usage": "_components.js 통합 번들 사용",
        "optimization": "트리셰이킹 + 압축으로 성능 최적화"
      },
      "bestPractices": [
        "컴포넌트명은 PascalCase 사용",
        "props 타입 명시적 정의",
        "이벤트는 kebab-case로 명명",
        "전역 등록보다 지역 등록 선호"
      ]
    },
    "stateManagement": {
      "description": "상태 관리 패턴",
      "approach": "분산형 상태 관리",
      "categories": [
        {
          "name": "Router State",
          "scope": "현재 라우트, 쿼리 파라미터",
          "storage": "메모리 (Vue 반응성)"
        },
        {
          "name": "I18n State",
          "scope": "현재 언어, 로드된 번역",
          "storage": "localStorage + 메모리"
        },
        {
          "name": "Auth State",
          "scope": "토큰, 사용자 정보",
          "storage": "쿠키 + localStorage + sessionStorage"
        },
        {
          "name": "Cache State",
          "scope": "컴포넌트 캐시, 라우트 캐시",
          "storage": "메모리 (TTL 기반)"
        }
      ]
    },
    "errorHandling": {
      "description": "에러 처리 패턴",
      "layers": [
        {
          "level": "컴포넌트",
          "strategy": "try-catch + 에러 상태 표시"
        },
        {
          "level": "라우트",
          "strategy": "라우트별 에러 핸들러"
        },
        {
          "level": "라우터",
          "strategy": "글로벌 에러 핸들러 + 404/500 페이지"
        },
        {
          "level": "애플리케이션",
          "strategy": "window.onerror + 폴백 HTML"
        }
      ]
    }
  },
  "testingWorkflows": {
    "manualTesting": {
      "description": "수동 테스트 체크리스트",
      "basicChecks": [
        "개발 모드에서 라우트 접근 확인",
        "프로덕션 모드에서 성능 확인",
        "모바일 뷰포트에서 반응형 확인",
        "다크모드 스위치 확인",
        "언어 변경 테스트 (?lang=en)",
        "캐시 클리어 테스트 (?clearCache=all)"
      ],
      "authTesting": [
        "보호된 라우트 접근 차단 확인",
        "로그인 후 리다이렉션 확인",
        "토큰 만료 시 동작 확인",
        "다중 저장소 인증 폴백 확인"
      ],
      "performanceTesting": [
        "첫 로드 시간 측정",
        "라우트 전환 속도 확인",
        "캐시 효과 확인",
        "메모리 사용량 모니터링"
      ]
    }
  },
  "troubleshooting": {
    "commonProblems": [
      {
        "problem": "라우트가 404를 반환함",
        "causes": [
          "파일명 불일치 (kebab-case vs camelCase)",
          "빌드 실행하지 않음",
          "JavaScript 구문 오류"
        ],
        "solutions": [
          "파일명 일치성 확인",
          "node build.cjs build 실행",
          "브라우저 콘솔에서 오류 확인"
        ]
      },
      {
        "problem": "스타일이 적용되지 않음",
        "causes": [
          "PurgeCSS에 의한 제거",
          "CSS 구문 오류",
          "잘못된 클래스명 사용"
        ],
        "solutions": [
          "safelist에 클래스 추가",
          "CSS 구문 검증",
          "실제 사용된 클래스명 확인"
        ]
      },
      {
        "problem": "컴포넌트가 로드되지 않음",
        "causes": [
          "컴포넌트 등록 누락",
          "잘못된 import 경로",
          "컴포넌트 구문 오류"
        ],
        "solutions": [
          "전역 등록 확인",
          "경로 및 파일명 확인",
          "컴포넌트 구문 검증"
        ]
      },
      {
        "problem": "언어 변경이 작동하지 않음",
        "causes": [
          "i18n 키 누락",
          "언어 파일 로딩 실패",
          "번역 키 오타"
        ],
        "solutions": [
          "i18n/{lang}.js 파일 확인",
          "번역 키 정확성 확인",
          "폴백 메커니즘 확인"
        ]
      }
    ]
  },
  "optimizationTips": {
    "buildOptimization": [
      "캐시 활용으로 빌드 시간 단축",
      "변경된 라우트만 재빌드",
      "병렬 처리로 성능 향상",
      "불필요한 컴포넌트 제거"
    ],
    "runtimeOptimization": [
      "컴포넌트 지연 로딩 활용",
      "라우트별 코드 스플리팅",
      "효율적인 캐시 전략",
      "최소한의 리렌더링"
    ],
    "cssOptimization": [
      "PurgeCSS로 미사용 CSS 제거",
      "CleanCSS로 압축",
      "중요 클래스 safelist 보호",
      "애니메이션 키프레임 보존"
    ]
  },
  "integrationPatterns": {
    "authentication": {
      "implementation": "다중 저장소 JWT 인증",
      "workflow": [
        "토큰 존재성 확인",
        "만료시간 검증",
        "커스텀 검증 로직",
        "폴백 쿠키명 시도"
      ]
    },
    "i18n": {
      "implementation": "지연 로딩 국제화",
      "workflow": [
        "기본 언어(한국어) 로드",
        "쿼리 파라미터로 언어 변경",
        "필요시 추가 언어 로드",
        "localStorage 캐싱"
      ]
    },
    "routing": {
      "implementation": "해시 기반 SPA 라우팅",
      "workflow": [
        "URL 변경 감지",
        "쿼리 파라미터 처리",
        "인증 확인",
        "컴포넌트 로딩 및 렌더링"
      ]
    }
  }
}