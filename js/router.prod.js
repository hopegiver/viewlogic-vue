class ViewLogicRouter{constructor(options={}){this.config={basePath:options.basePath || '/src',mode:options.mode || 'hash',cacheMode:options.cacheMode || 'memory',cacheTTL:options.cacheTTL || 300000,maxCacheSize:options.maxCacheSize || 50,useLayout:options.useLayout || false,defaultLayout:options.defaultLayout || 'default',environment:options.environment || 'development',routesPath:options.routesPath || '/routes',preloadRoutes:options.preloadRoutes || [],preloadDelay:options.preloadDelay || 1000,preloadInterval:options.preloadInterval || 500,showLoadingProgress:options.showLoadingProgress !==false,loadingMinDuration:options.loadingMinDuration || 300,enableErrorReporting:options.enableErrorReporting !==false,useComponents:options.useComponents !==false,security:{enableParameterValidation:options.security?.enableParameterValidation !==false,maxParameterLength:options.security?.maxParameterLength || 1000,maxParameterCount:options.security?.maxParameterCount || 50,maxArraySize:options.security?.maxArraySize || 100,allowedKeyPattern:options.security?.allowedKeyPattern || /^[a-zA-Z0-9_-]+$/,logSecurityWarnings:options.security?.logSecurityWarnings !==false},useI18n:options.useI18n !==false,i18nDefaultLanguage:options.i18nDefaultLanguage || 'ko',auth:{enabled:options.auth?.enabled || false,loginRoute:options.auth?.loginRoute || 'login',protectedRoutes:options.auth?.protectedRoutes || [],protectedPrefixes:options.auth?.protectedPrefixes || [],publicRoutes:options.auth?.publicRoutes || ['login','register','home'],checkAuthFunction:options.auth?.checkAuthFunction || null,redirectAfterLogin:options.auth?.redirectAfterLogin || 'home',cookieName:options.auth?.cookieName || 'authToken',fallbackCookieNames:options.auth?.fallbackCookieNames || ['accessToken','token','jwt']}};this.currentHash='';this.currentQueryParams={};this.currentVueApp=null;this.previousVueApp=null;this.cache=new Map();this.cacheTimestamps=new Map();this.lruOrder=[];this.preloadedRoutes=new Set();this.preloadQueue=[];this.transitionInProgress=false;this.loadingStartTime=null;this.progressBar=null;this.loadingOverlay=null;this.componentLoader=null;this.init();this.i18nInitPromise=this.initializeI18n();this.initializeLoadingComponents();this.initializeComponentSystem();setTimeout(()=> this.startPreloading(),this.config.preloadDelay);if(this.config.environment==='development'){window.routerCache={clear:()=> this.clearCache(),clearComponents:()=> this.clearComponentCache(),invalidateComponent:(routeName)=> this.invalidateComponentCache(routeName),stats:()=>({totalEntries:this.cache.size,componentEntries:Array.from(this.cache.keys()).filter(key=> key.startsWith('component_')).length,scriptEntries:Array.from(this.cache.keys()).filter(key=> key.startsWith('script_')).length})};}}init(){if(this.config.mode==='hash'){window.addEventListener('hashchange',()=> this.handleRouteChange());if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',()=> this.handleRouteChange());}else{setTimeout(()=> this.handleRouteChange(),0);}if(!window.location.hash){window.location.hash='#/';}}else{window.addEventListener('popstate',()=> this.handleRouteChange());if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',()=> this.handleRouteChange());}else{setTimeout(()=> this.handleRouteChange(),0);}if(window.location.pathname==='/'){this.navigateTo('home');}}}initializeLoadingComponents(){if(this.config.showLoadingProgress){this.createProgressBar();}}createProgressBar(){const progressContainer=document.createElement('div');progressContainer.className='loading-progress';progressContainer.style.display='none';const progressBar=document.createElement('div');progressBar.className='loading-progress-bar';progressContainer.appendChild(progressBar);document.body.appendChild(progressContainer);this.progressBar={container:progressContainer,bar:progressBar};}showLoading(){this.loadingStartTime=Date.now();if(this.config.showLoadingProgress && this.progressBar){this.progressBar.container.style.display='block';this.progressBar.bar.style.width='0%';this.animateProgress();}}animateProgress(){let progress=0;const interval=setInterval(()=>{progress +=Math.random()* 15;if(progress > 90)progress=90;if(this.progressBar && this.progressBar.bar){this.progressBar.bar.style.width=progress + '%';}if(!this.transitionInProgress){clearInterval(interval);if(this.progressBar && this.progressBar.bar){this.progressBar.bar.style.width='100%';}}},100);}async hideLoading(){const loadingDuration=Date.now()- this.loadingStartTime;const minDuration=this.config.loadingMinDuration;if(loadingDuration < minDuration){await new Promise(resolve=> setTimeout(resolve,minDuration - loadingDuration));}if(this.progressBar){this.progressBar.bar.style.width='100%';setTimeout(()=>{if(this.progressBar){this.progressBar.container.style.display='none';this.progressBar.bar.style.width='0%';}},200);}if(this.loadingOverlay){this.loadingOverlay.style.opacity='0';setTimeout(()=>{if(this.loadingOverlay && this.loadingOverlay.parentNode){this.loadingOverlay.remove();this.loadingOverlay=null;}},300);}}showFullPageLoading(message='Î°úÎî© Ï§ë...'){this.hideLoading();const overlay=document.createElement('div');overlay.className='page-loading-overlay';overlay.innerHTML=` <div class="loading-container"> <div class="loading-spinner"> <div class="spinner-ring"></div> <div class="spinner-ring"></div> <div class="spinner-ring"></div> <div class="spinner-ring"></div> </div> <p class="loading-text">${message}</p> </div> `;document.body.appendChild(overlay);this.loadingOverlay=overlay;this.addLoadingStyles();}async initializeComponentSystem(){if(!this.config.useComponents){return;}try{if(this.config.environment==='production'){console.log('üß© Production mode:Loading unified components system');await this.loadUnifiedComponents();return;}const{getComponentLoader}=await import(this.config.basePath + '/components/ComponentLoader.js');this.componentLoader=getComponentLoader({basePath:this.config.basePath + '/components',cache:true});console.log('üß© Component system initialized(development mode)');}catch(error){console.warn('‚ö†Ô∏è Component system initialization failed:',error);this.config.useComponents=false;}}async loadUnifiedComponents(){try{const componentsPath=`${this.config.routesPath}/components.js`;console.log(`üì¶ Loading unified components from:${componentsPath}`);const fullPath=window.location.origin + componentsPath;console.log(`üì¶ Full path:${fullPath}`);const componentsModule=await import(componentsPath);console.log('üì¶ Components module loaded:',componentsModule);if(typeof componentsModule.registerComponents==='function'){this.unifiedComponentsModule=componentsModule;console.log('üì¶ Unified components loaded and ready for registration');console.log('üì¶ Available components:',Object.keys(componentsModule.components ||{}));return true;}else{throw new Error('registerComponents function not found in components module');}}catch(error){console.error('‚ùå Failed to load unified components:',error);console.error('‚ùå Error details:',error.stack);this.config.useComponents=false;throw error;}}async initializeI18n(){try{if(!this.config.useI18n){console.log('I18n system disabled in router config,skipping initialization');return;}if(typeof window.i18n==='undefined'){try{await import('./i18n.js');console.log('I18n module loaded successfully');}catch(error){console.error('Failed to load i18n module:',error);throw error;}}if(window.i18n){if(window.i18n.updateConfig){window.i18n.updateConfig({enabled:this.config.useI18n,defaultLanguage:this.config.i18nDefaultLanguage,fallbackLanguage:this.config.i18nDefaultLanguage,debug:this.config.environment==='development'});}if(!window.i18n.isEnabled()){console.log('I18n system is disabled,skipping initialization');return;}await window.i18n.initialize();const langFromQuery=this.getQueryParam('lang');if(langFromQuery && langFromQuery !==window.i18n.getCurrentLanguage()){console.log('Setting language from URL parameter:',langFromQuery);await window.i18n.setLanguage(langFromQuery);}window.i18n.on('languageChanged',(data)=>{this.onLanguageChanged(data);});console.log('I18n system initialized successfully with router config');}}catch(error){console.warn('Failed to initialize i18n system:',error);}}async loadExternalScript(src,options={}){return new Promise((resolve,reject)=>{if(document.querySelector(`script[src="${src}"]`)){resolve();return;}const script=document.createElement('script');script.src=src;if(options.type==='module' || src.includes('i18n.js')){script.type='module';}script.onload=resolve;script.onerror=reject;document.head.appendChild(script);});}onLanguageChanged(data){if(this.currentVueApp){this.loadRoute(this.currentHash,true);}console.log('Language changed from',data.from,'to',data.to);}updateI18nGlobalProperties(app){if(app){if(!this.config.useI18n ||(window.i18n && !window.i18n.isEnabled())){app.config.globalProperties.$t=(key,params)=> key;app.config.globalProperties.$i18n=null;app.config.globalProperties.$lang=this.config.i18nDefaultLanguage;}else if(window.i18n){app.config.globalProperties.$t=(key,params)=> window.i18n.t(key,params);app.config.globalProperties.$i18n=window.i18n;app.config.globalProperties.$lang=window.i18n.getCurrentLanguage();}else{app.config.globalProperties.$t=(key,params)=> key;app.config.globalProperties.$i18n=null;app.config.globalProperties.$lang=this.config.i18nDefaultLanguage;}}}registerComponentsToVueApp(vueApp){if(!this.config.useComponents || !vueApp){if(this.config.environment==='development'){console.log('‚ö†Ô∏è Components not enabled or Vue app not provided');}return;}if(this.config.environment==='development'){console.log('üîß Registering components to Vue app...');console.log('üîß Environment:',this.config.environment);console.log('üîß Unified components module available:',!!this.unifiedComponentsModule);}try{if(this.config.environment==='production' && this.unifiedComponentsModule){if(this.config.environment==='development'){console.log('üîß Calling registerComponents function...');}this.unifiedComponentsModule.registerComponents(vueApp);if(this.config.environment==='development'){console.log('‚úÖ Components registered successfully');}return true;}if(this.componentLoader){if(this.config.environment==='development'){console.log('üîß Using ComponentLoader for development mode...');}this.componentLoader.registerGlobalComponents(vueApp);return true;}console.warn('‚ö†Ô∏è No component registration method available');}catch(error){console.error('‚ùå Failed to register components to Vue app:',error);console.error('‚ùå Error details:',error.stack);return false;}return false;}async registerComponentsForVueApp(vueApp){if(!this.config.useComponents || !vueApp){return{successful:[],failed:[]};}if(this.config.environment==='production'){return{successful:[],failed:[]};}if(!this.componentLoader){return{successful:[],failed:[]};}try{console.log('üìù Registering global components with Vue app(development mode)...');const result=await this.componentLoader.registerGlobalComponents(vueApp);return result;}catch(error){console.warn('Component registration failed:',error);return{successful:[],failed:[]};}}handleRouteChange(){let route,queryParams;if(this.config.mode==='hash'){let hashPath=window.location.hash.slice(1)|| '/';const hashParts=hashPath.split('?');const pathPart=hashParts[0];const queryPart=hashParts[1] || window.location.search.slice(1);if(pathPart==='/' || pathPart===''){route='home';}else if(pathPart.startsWith('/')){route=pathPart.slice(1)|| 'home';}else{route=pathPart || 'home';}queryParams=this.parseQueryString(queryPart);}else{route=window.location.pathname.slice(1)|| 'home';queryParams=this.parseQueryString(window.location.search.slice(1));}this.currentQueryParams=queryParams;if(route !==this.currentHash || this.hasQueryParamsChanged(queryParams)){this.currentHash=route;this.loadRoute(route);}}async loadRoute(routeName){if(this.transitionInProgress){return;}try{this.transitionInProgress=true;this.showLoading();const authResult=await this.checkAuthentication(routeName);if(!authResult.allowed){await this.hideLoading();this.redirectToLogin(routeName);return;}const appElement=document.getElementById('app');if(!appElement){throw new Error('App element not found');}const component=await this.createVueComponent(routeName);await this.renderComponentWithTransition(component,routeName);await this.hideLoading();}catch(error){console.error('ÎùºÏö∞Ìä∏ Î°úÎî© Ïò§Î•ò:',error);await this.hideLoading();await this.handleRouteError(routeName,error);}finally{this.transitionInProgress=false;}}async handleRouteError(routeName,error){let errorCode=500;let errorMessage='ÌéòÏù¥ÏßÄÎ•º Î°úÎìúÌï† Ïàò ÏóÜÏäµÎãàÎã§.';console.log('ÏóêÎü¨ ÏÉÅÏÑ∏:',error.message,error.name);if(error.message.includes('not found')|| error.message.includes('404')|| error.message.includes('Failed to resolve')|| error.message.includes('Failed to fetch')||(error.name==='TypeError' && error.message.includes('resolve'))){errorCode=404;errorMessage=`'${routeName}' ÌéòÏù¥ÏßÄÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.`;}else if(error.message.includes('network')&& !error.message.includes('not found')){errorCode=503;errorMessage='ÎÑ§Ìä∏ÏõåÌÅ¨ Ïó∞Í≤∞ÏùÑ ÌôïÏù∏Ìï¥ Ï£ºÏÑ∏Ïöî.';}else if(error.message.includes('permission')|| error.message.includes('403')){errorCode=403;errorMessage='ÌéòÏù¥ÏßÄÏóê Ï†ëÍ∑ºÌï† Í∂åÌïúÏù¥ ÏóÜÏäµÎãàÎã§.';}console.log(`ÏóêÎü¨ ÏΩîÎìú Í≤∞Ï†ï:${errorCode}(ÎùºÏö∞Ìä∏:${routeName})`);if(this.config.enableErrorReporting){this.reportError(routeName,error,errorCode);}try{if(errorCode===404){await this.load404Page();}else{await this.loadErrorPage(errorCode,errorMessage);}}catch(fallbackError){console.error('ÏóêÎü¨ ÌéòÏù¥ÏßÄ Î°úÎî© Ïã§Ìå®:',fallbackError);this.showFallbackErrorPage(errorCode,errorMessage);}}async load404Page(){try{console.log('üîç Loading 404 page...');const component=await this.createVueComponent('404');await this.renderComponentWithTransition(component,'404');console.log('‚úÖ 404 page loaded successfully');}catch(error){console.error('‚ùå 404 page loading failed:',error);this.showFallbackErrorPage('404','ÌéòÏù¥ÏßÄÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.');}}async loadErrorPage(errorCode,errorMessage){try{console.log(`üîç Loading error page for ${errorCode}...`);const errorComponent=await this.createErrorComponent(errorCode,errorMessage);await this.renderComponentWithTransition(errorComponent,'error');console.log(`‚úÖ Error page ${errorCode}loaded successfully`);}catch(error){console.error(`‚ùå Error page ${errorCode}loading failed:`,error);this.showFallbackErrorPage(errorCode,errorMessage);}}async createErrorComponent(errorCode,errorMessage){try{const component=await this.createVueComponent('error');const errorComponent={...component,data(){const originalData=component.data ? component.data():{};return{...originalData,errorCode,errorMessage,showRetry:true,showGoHome:true};}};return errorComponent;}catch(error){console.error('Error component load failed:',error);throw new Error(`Cannot load error page:${error.message}`);}}showFallbackErrorPage(errorCode,errorMessage){const appElement=document.getElementById('app');if(!appElement)return;const fallbackHTML=` <div class="fallback-error-page" style=" display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:100vh;padding:2rem;text-align:center;background:#f8f9fa;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;"> <div style=" background:white;padding:3rem;border-radius:12px;box-shadow:0 4px 20px rgba(0,0,0,0.1);max-width:500px;"> <h1 style=" font-size:4rem;margin:0;color:#dc3545;font-weight:300;">${errorCode}</h1> <h2 style=" margin:1rem 0;color:#495057;font-weight:400;">${errorMessage}</h2> <p style=" color:#6c757d;margin-bottom:2rem;line-height:1.5;">ÏöîÏ≤≠ÌïòÏã† ÌéòÏù¥ÏßÄÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.</p> <button onclick="window.location.hash='#/'" style=" background:#007bff;color:white;border:none;padding:12px 24px;border-radius:6px;cursor:pointer;font-size:1rem;transition:background 0.2s;" onmouseover="this.style.background='#0056b3'" onmouseout="this.style.background='#007bff'"> ÌôàÏúºÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞ </button> </div> </div> `;appElement.innerHTML=fallbackHTML;console.log(`üìÑ Fallback error page displayed for ${errorCode}`);}reportError(routeName,error,errorCode){const errorReport={route:routeName,errorCode,errorMessage:error.message,stack:error.stack,url:window.location.href,userAgent:navigator.userAgent,timestamp:new Date().toISOString(),routerConfig:{environment:this.config.environment,mode:this.config.mode}};console.error('ÎùºÏö∞ÌÑ∞ ÏóêÎü¨ Î¶¨Ìè¨Ìä∏:',errorReport);}async createVueComponent(routeName){const cacheKey=`component_${routeName}`;const cached=this.getFromCache(cacheKey);if(cached){console.log(`üì¶ Using cached Vue component:${routeName}`);return cached;}if(this.config.useI18n && this.i18nInitPromise){try{await this.i18nInitPromise;console.log('üìÑ I18n initialization completed before component creation');if(window.i18n && window.i18n.isReady){await window.i18n.isReady();}}catch(error){console.warn('‚ö†Ô∏è I18n initialization failed,proceeding without translations:',error);}}const script=await this.loadScript(routeName);if(this.config.environment==='production'){const router=this;const component={...script,name:script.name || this.toPascalCase(routeName),template:script.template || this.generateDefaultTemplate(routeName),components:await this.getUIComponents(),data(){const originalData=script.data ? script.data():{};return{...originalData,currentRoute:routeName,pageTitle:script.pageTitle || router.generatePageTitle(routeName),showHeader:script.showHeader !==false,headerTitle:script.headerTitle || router.generatePageTitle(routeName),headerSubtitle:script.headerSubtitle,$query:router.currentQueryParams ||{},$lang:router.getCurrentLanguage(),$dataLoading:false};},async mounted(){if(script.mounted){await script.mounted.call(this);}if(script.dataURL){await this.$fetchData();}},methods:{...script.methods,navigateTo:(route,params)=> router.navigateTo(route,params),getCurrentRoute:()=> router.getCurrentRoute(),getQueryParams:()=> router.getQueryParams(),getQueryParam:(key)=> router.getQueryParam(key),setQueryParams:(params,replace)=> router.setQueryParams(params,replace),removeQueryParams:(keys)=> router.removeQueryParams(keys),$t:this.getI18nTranslateFunction(),$i18n:()=> window.i18n || null,$isAuthenticated:()=> router.isUserAuthenticated(),$logout:()=> router.handleLogout(),$loginSuccess:()=> router.handleLoginSuccess(),$checkAuth:(route)=> router.checkAuthentication(route),$getToken:()=> router.getAccessToken(),$setToken:(token,options)=> router.setAccessToken(token,options),$removeToken:(storage)=> router.removeToken(storage),$getAuthCookie:()=> router.getAuthCookie(),$getCookie:(name)=> router.getCookieValue(name),async $fetchData(){if(!script.dataURL)return;this.$dataLoading=true;try{const data=await router.fetchComponentData(script.dataURL);console.log(`üìä Data fetched for ${routeName}:`,data);Object.assign(this,data);this.$emit('data-loaded',data);}catch(error){console.warn(`‚ö†Ô∏è Failed to fetch data for ${routeName}:`,error);this.$emit('data-error',error);}finally{this.$dataLoading=false;}}},_routeName:routeName};this.setCache(cacheKey,component);console.log(`üíæ Cached Vue component:${routeName}`);return component;}else{const template=await this.loadTemplate(routeName);const style=await this.loadStyle(routeName);const layout=this.config.useLayout ? await this.loadLayout(script.layout || this.config.defaultLayout):null;const router=this;const component={...script,name:script.name || this.toPascalCase(routeName),template:layout ? this.mergeLayoutWithTemplate(routeName,layout,template):template,components:await this.getUIComponents(),data(){const originalData=script.data ? script.data():{};return{...originalData,currentRoute:routeName,pageTitle:script.pageTitle || router.generatePageTitle(routeName),pageStyle:style,showHeader:script.showHeader !==false,headerTitle:script.headerTitle || router.generatePageTitle(routeName),headerSubtitle:script.headerSubtitle,$query:router.currentQueryParams ||{},$lang:router.getCurrentLanguage(),$dataLoading:false};},async mounted(){if(script.mounted){await script.mounted.call(this);}if(script.dataURL){await this.$fetchData();}},methods:{...script.methods,navigateTo:(route,params)=> router.navigateTo(route,params),getCurrentRoute:()=> router.getCurrentRoute(),getQueryParams:()=> router.getQueryParams(),getQueryParam:(key)=> router.getQueryParam(key),setQueryParams:(params,replace)=> router.setQueryParams(params,replace),removeQueryParams:(keys)=> router.removeQueryParams(keys),$t:this.getI18nTranslateFunction(),$i18n:()=> window.i18n || null,$isAuthenticated:()=> router.isUserAuthenticated(),$logout:()=> router.handleLogout(),$loginSuccess:()=> router.handleLoginSuccess(),$checkAuth:(route)=> router.checkAuthentication(route),$getToken:()=> router.getAccessToken(),$setToken:(token,options)=> router.setAccessToken(token,options),$removeToken:(storage)=> router.removeToken(storage),$getAuthCookie:()=> router.getAuthCookie(),$getCookie:(name)=> router.getCookieValue(name),async $fetchData(){if(!script.dataURL)return;this.$dataLoading=true;try{const data=await router.fetchComponentData(script.dataURL);console.log(`üìä Data fetched for ${routeName}:`,data);Object.assign(this,data);this.$emit('data-loaded',data);}catch(error){console.warn(`‚ö†Ô∏è Failed to fetch data for ${routeName}:`,error);this.$emit('data-error',error);}finally{this.$dataLoading=false;}}},_style:style,_routeName:routeName,_layout:layout};this.setCache(cacheKey,component);console.log(`üíæ Cached Vue component:${routeName}`);return component;}}getI18nTranslateFunction(){if(!this.config.useI18n ||(window.i18n && !window.i18n.isEnabled())){return(key,params)=> key;}else if(window.i18n && typeof window.i18n.t==='function'){return(key,params)=> window.i18n.t(key,params);}else{return(key,params)=> key;}}getCurrentLanguage(){if(!this.config.useI18n ||(window.i18n && !window.i18n.isEnabled())){return this.config.i18nDefaultLanguage;}else if(window.i18n && typeof window.i18n.getCurrentLanguage==='function'){return window.i18n.getCurrentLanguage();}else{return this.config.i18nDefaultLanguage;}}toPascalCase(str){return str .split(/[-_\s]+/).map(word=> word.charAt(0).toUpperCase()+ word.slice(1).toLowerCase()).join('');}generatePageTitle(routeName){return this.toPascalCase(routeName).replace(/([A-Z])/g,' $1').trim();}generateDefaultTemplate(routeName){const title=this.generatePageTitle(routeName);return ` <div class="page-container"> <header v-if="showHeader" class="page-header"> <div class="container"> <h1>{{headerTitle || pageTitle}}</h1> <p v-if="headerSubtitle" class="subtitle">{{headerSubtitle}}</p> </div> </header> <main class="main-content"> <div class="container"> <div v-if="$dataLoading" class="loading-state"> <div class="loading-spinner"></div> <p>Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§Îäî Ï§ë...</p> </div> <div v-else class="content"> <h2>${title}</h2> <p>Ïù¥ ÌéòÏù¥ÏßÄÎäî ÏûêÎèôÏúºÎ°ú ÏÉùÏÑ±Îêú Í∏∞Î≥∏ ÌÖúÌîåÎ¶øÏûÖÎãàÎã§.</p> <!-- Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÏúºÎ©¥ ÌëúÏãú --> <div v-if="Object.keys($data).some(key=> !key.startsWith('$')&& !['currentRoute','pageTitle','showHeader','headerTitle','headerSubtitle'].includes(key))" class="data-display"> <h3>Îç∞Ïù¥ÌÑ∞</h3> <pre>{{JSON.stringify($data,null,2)}}</pre> </div> </div> </div> </main> </div> `.trim();}async checkAuthentication(routeName){if(!this.config.auth.enabled){return{allowed:true,reason:'auth_disabled'};}if(this.config.auth.publicRoutes.includes(routeName)){return{allowed:true,reason:'public_route'};}const isProtectedRoute=this.config.auth.protectedRoutes.includes(routeName);const isProtectedPrefix=this.config.auth.protectedPrefixes.some(prefix=> routeName.startsWith(prefix + '/')|| routeName===prefix);if(!isProtectedRoute && !isProtectedPrefix){return{allowed:true,reason:'not_protected'};}if(typeof this.config.auth.checkAuthFunction==='function'){try{const isAuthenticated=await this.config.auth.checkAuthFunction(routeName);return{allowed:isAuthenticated,reason:isAuthenticated ? 'custom_auth_success':'custom_auth_failed',route:routeName};}catch(error){console.error('Custom auth function failed:',error);return{allowed:false,reason:'custom_auth_error',error};}}const isAuthenticated=this.isUserAuthenticated();return{allowed:isAuthenticated,reason:isAuthenticated ? 'authenticated':'not_authenticated',route:routeName};}isUserAuthenticated(){const token=localStorage.getItem('authToken')|| localStorage.getItem('accessToken');if(token){try{if(token.includes('.')){const payload=JSON.parse(atob(token.split('.')[1]));const isExpired=payload.exp && payload.exp * 1000 < Date.now();if(isExpired){localStorage.removeItem('authToken');localStorage.removeItem('accessToken');return false;}}return true;}catch(error){console.warn('Token validation failed:',error);return false;}}const sessionToken=sessionStorage.getItem('authToken')|| sessionStorage.getItem('accessToken');if(sessionToken){return true;}const authCookie=this.getAuthCookie();if(authCookie){try{if(authCookie.includes('.')){const payload=JSON.parse(atob(authCookie.split('.')[1]));const isExpired=payload.exp && payload.exp * 1000 < Date.now();if(isExpired){this.removeAuthCookie();return false;}}return true;}catch(error){console.warn('Cookie token validation failed:',error);return false;}}if(window.user || window.isAuthenticated){return true;}return false;}getAuthCookie(){const primaryCookie=this.getCookieValue(this.config.auth.cookieName);if(primaryCookie){return primaryCookie;}for(const cookieName of this.config.auth.fallbackCookieNames){const cookieValue=this.getCookieValue(cookieName);if(cookieValue){return cookieValue;}}return null;}getCookieValue(name){const value=`;${document.cookie}`;const parts=value.split(`;${name}=`);if(parts.length===2){return parts.pop().split(';').shift();}return null;}removeAuthCookie(){const cookiesToRemove=[this.config.auth.cookieName,...this.config.auth.fallbackCookieNames];for(const cookieName of cookiesToRemove){document.cookie=`${cookieName}=;expires=Thu,01 Jan 1970 00:00:00 UTC;path=/;`;const hostname=window.location.hostname;document.cookie=`${cookieName}=;expires=Thu,01 Jan 1970 00:00:00 UTC;path=/;domain=.${hostname};`;}}getAccessToken(){let token=localStorage.getItem('authToken')|| localStorage.getItem('accessToken');if(token)return token;token=sessionStorage.getItem('authToken')|| sessionStorage.getItem('accessToken');if(token)return token;token=this.getAuthCookie();if(token)return token;return null;}setAccessToken(token,options={}){if(!token){console.warn('Token is required');return false;}const{storage='localStorage',cookieOptions={},skipValidation=false}=options;if(!skipValidation && token.includes('.')){try{const payload=JSON.parse(atob(token.split('.')[1]));const isExpired=payload.exp && payload.exp * 1000 < Date.now();if(isExpired){console.warn('Token is already expired');return false;}console.log(`Token expires at:${new Date(payload.exp * 1000).toISOString()}`);}catch(error){console.warn('Token validation failed:',error);if(!skipValidation){return false;}}}try{switch(storage){case 'localStorage':localStorage.setItem('authToken',token);console.log('‚úÖ Token saved to localStorage');break;case 'sessionStorage':sessionStorage.setItem('authToken',token);console.log('‚úÖ Token saved to sessionStorage');break;case 'cookie':this.setAuthCookie(token,cookieOptions);console.log('‚úÖ Token saved to cookie');break;default:localStorage.setItem('authToken',token);console.log('‚úÖ Token saved to localStorage(default)');}this.emitAuthEvent('token_set',{storage,tokenLength:token.length,hasExpiration:token.includes('.')});return true;}catch(error){console.error('Failed to set token:',error);return false;}}setAuthCookie(token,options={}){const{cookieName=this.config.auth.cookieName,expires=null,path='/',domain=null,secure=window.location.protocol==='https:',sameSite='Lax'}=options;let cookieString=`${cookieName}=${encodeURIComponent(token)};path=${path}`;if(expires){if(typeof expires==='number'){const expireDate=new Date();expireDate.setDate(expireDate.getDate()+ expires);cookieString +=`;expires=${expireDate.toUTCString()}`;}else if(expires instanceof Date){cookieString +=`;expires=${expires.toUTCString()}`;}}else{if(token.includes('.')){try{const payload=JSON.parse(atob(token.split('.')[1]));if(payload.exp){const expireDate=new Date(payload.exp * 1000);cookieString +=`;expires=${expireDate.toUTCString()}`;}}catch(error){console.debug('Could not extract expiration from JWT token');}}}if(domain){cookieString +=`;domain=${domain}`;}if(secure){cookieString +=';secure';}cookieString +=`;samesite=${sameSite}`;document.cookie=cookieString;console.log(`üç™ Cookie set:${cookieName}`);}removeToken(storage='all'){switch(storage){case 'localStorage':localStorage.removeItem('authToken');localStorage.removeItem('accessToken');break;case 'sessionStorage':sessionStorage.removeItem('authToken');sessionStorage.removeItem('accessToken');break;case 'cookie':this.removeAuthCookie();break;case 'all':default:localStorage.removeItem('authToken');localStorage.removeItem('accessToken');sessionStorage.removeItem('authToken');sessionStorage.removeItem('accessToken');this.removeAuthCookie();break;}this.emitAuthEvent('token_removed',{storage});console.log(`üóëÔ∏è Token removed from ${storage}`);}redirectToLogin(originalRoute){console.log(`üîí Authentication required for route:${originalRoute}`);const redirectUrl=originalRoute !==this.config.auth.loginRoute ? `${this.config.auth.loginRoute}?redirect=${encodeURIComponent(originalRoute)}`:this.config.auth.loginRoute;this.navigateTo(redirectUrl);this.emitAuthEvent('auth_required',{originalRoute,loginRoute:this.config.auth.loginRoute});}handleLoginSuccess(){const redirectParam=this.getQueryParam('redirect');const targetRoute=redirectParam || this.config.auth.redirectAfterLogin;console.log(`‚úÖ Login successful,redirecting to:${targetRoute}`);this.navigateTo(targetRoute);this.emitAuthEvent('login_success',{targetRoute});}handleLogout(){localStorage.removeItem('authToken');localStorage.removeItem('accessToken');sessionStorage.removeItem('authToken');sessionStorage.removeItem('accessToken');this.removeAuthCookie();if(window.user)delete window.user;if(window.isAuthenticated)window.isAuthenticated=false;console.log('üö™ User logged out');this.navigateTo(this.config.auth.loginRoute);this.emitAuthEvent('logout',{});}emitAuthEvent(eventType,data){const event=new CustomEvent('router:auth',{detail:{type:eventType,data,timestamp:Date.now()}});window.dispatchEvent(event);}async fetchComponentData(dataURL){try{const queryString=this.buildQueryString(this.currentQueryParams ||{});const fullURL=queryString ? `${dataURL}?${queryString}`:dataURL;console.log(`üåê Fetching data from:${fullURL}`);const response=await fetch(fullURL,{method:'GET',headers:{'Content-Type':'application/json','Accept':'application/json'}});if(!response.ok){throw new Error(`HTTP error! status:${response.status}`);}const data=await response.json();if(typeof data !=='object' || data===null){throw new Error('Invalid data format:expected object');}return data;}catch(error){console.error('Failed to fetch component data:',error);throw error;}}async getUIComponents(){if(this.config.environment==='production'){if(this.unifiedComponentsModule){if(this.unifiedComponentsModule.components){return this.unifiedComponentsModule.components;}console.debug('Using legacy component registration method');return{};}return{};}else{if(this.componentLoader){try{const componentNames=['Button','Modal','Card','Toast','Input','Tabs','LanguageSwitcher'];const components={};for(const name of componentNames){try{const component=await this.componentLoader.loadComponent(name);if(component){components[name]=component;}}catch(error){console.debug(`Failed to load component ${name}:`,error.message);}}return components;}catch(error){console.warn('Failed to load UI components:',error);return{};}}return{};}}invalidateComponentCache(routeName){const cacheKey=`component_${routeName}`;this.removeFromCache(cacheKey);console.log(`üóëÔ∏è Invalidated component cache:${routeName}`);}clearComponentCache(){const componentKeys=Array.from(this.cache.keys()).filter(key=> key.startsWith('component_'));componentKeys.forEach(key=> this.cache.delete(key));console.log(`üóëÔ∏è Cleared ${componentKeys.length}component cache entries`);}async loadLayout(layoutName){const cacheKey=`layout_${layoutName}`;const cached=this.getFromCache(cacheKey);if(cached)return cached;try{console.log(`üîÑ Loading layout:${this.config.basePath}/layouts/${layoutName}.html`);const response=await fetch(`${this.config.basePath}/layouts/${layoutName}.html`);if(!response.ok)throw new Error(`Layout not found:${response.status}`);const layout=await response.text();console.log(`‚úì Layout '${layoutName}' loaded successfully`);this.setCache(cacheKey,layout);return layout;}catch(error){console.warn(`‚ùå Layout '${layoutName}' not found:`,error.message);return null;}}mergeLayoutWithTemplate(routeName,layout,template){const cacheKey=`merge_${routeName}`;const cached=this.getFromCache(cacheKey);if(cached)return cached;console.log('üîÑ Merging layout with template...');let result;if(layout.includes('{{content}}')){result=layout.replace(/{{content}}/s,template);}else if(layout.includes('class="main-content"')){console.log('‚úì Using main-content replacement');result=layout.replace(/(<div class="container">).*?(<\/div>\s*<\/main>)/s,`$1${template}$2`);}else{console.log('‚úì Wrapping template with layout');result=`${layout}\n${template}`;}console.log('‚úì Layout merge completed');this.setCache(cacheKey,result);return result;}async loadTemplate(routeName){const cacheKey=`template_${routeName}`;const cached=this.getFromCache(cacheKey);if(cached)return cached;const response=await fetch(`${this.config.basePath}/views/${routeName}.html`);if(!response.ok)throw new Error('Template not found');const template=await response.text();this.setCache(cacheKey,template);return template;}async loadScript(routeName){const cacheKey=`script_${routeName}`;const cached=this.getFromCache(cacheKey);if(cached)return cached;let script;try{if(this.config.environment==='production'){const importPath=`${this.config.routesPath}/${routeName}.js`;console.log(`üì¶ Loading production route:${importPath}`);const module=await import(importPath);script=module.default;}else{const importPath=`${this.config.basePath}/logic/${routeName}.js`;console.log(`üõ†Ô∏è Loading development route:${importPath}`);const module=await import(importPath);script=module.default;}if(!script){throw new Error(`Route '${routeName}' not found - no default export`);}}catch(error){if(error.message.includes('Failed to resolve')|| error.message.includes('Failed to fetch')|| error.message.includes('not found')|| error.name==='TypeError'){throw new Error(`Route '${routeName}' not found - 404`);}throw error;}this.setCache(cacheKey,script);return script;}async loadStyle(routeName){const cacheKey=`style_${routeName}`;const cached=this.getFromCache(cacheKey);if(cached)return cached;const response=await fetch(`${this.config.basePath}/styles/${routeName}.css`);if(!response.ok)throw new Error('Style not found');const style=await response.text();this.setCache(cacheKey,style);return style;}async renderComponent(vueComponent,routeName){const appElement=document.getElementById('app');if(!appElement)return;const loadingElement=appElement.querySelector('.loading');if(loadingElement){loadingElement.classList.add('fade-out');setTimeout(()=>{if(loadingElement && loadingElement.parentNode){loadingElement.remove();}},300);if(this.config.environment==='development' && vueComponent._style){this.applyStyle(vueComponent._style,routeName);}const{createApp}=Vue;this.currentVueApp=createApp(vueComponent);this.currentVueApp.config.globalProperties.$router={navigateTo:(route,params)=> this.navigateTo(route,params),getCurrentRoute:()=> this.getCurrentRoute(),getQueryParams:()=> this.getQueryParams(),getQueryParam:(key)=> this.getQueryParam(key),setQueryParams:(params,replace)=> this.setQueryParams(params,replace),removeQueryParams:(keys)=> this.removeQueryParams(keys),currentRoute:this.currentHash,currentQuery:this.currentQueryParams ||{}};this.currentVueApp.mount('#app');this.transitionInProgress=false;}else{await this.renderComponentWithTransition(vueComponent,routeName);}}async renderComponentWithTransition(vueComponent,routeName){const appElement=document.getElementById('app');if(!appElement)return;const newPageContainer=document.createElement('div');newPageContainer.className='page-container page-entered';newPageContainer.id=`page-${routeName}-${Date.now()}`;const existingContainers=appElement.querySelectorAll('.page-container');existingContainers.forEach(container=>{container.classList.remove('page-entered');container.classList.add('page-exiting');});appElement.appendChild(newPageContainer);if(this.config.environment==='development' && vueComponent._style){this.applyStyle(vueComponent._style,routeName);}const{createApp}=Vue;const newVueApp=createApp(vueComponent);newVueApp.config.globalProperties.$router={navigateTo:(route,params)=> this.navigateTo(route,params),getCurrentRoute:()=> this.getCurrentRoute(),getQueryParams:()=> this.getQueryParams(),getQueryParam:(key)=> this.getQueryParam(key),setQueryParams:(params,replace)=> this.setQueryParams(params,replace),removeQueryParams:(keys)=> this.removeQueryParams(keys),currentRoute:this.currentHash,currentQuery:this.currentQueryParams ||{}};newVueApp.mount(`#${newPageContainer.id}`);setTimeout(()=>{this.cleanupPreviousPages();this.transitionInProgress=false;},50);if(this.currentVueApp){this.previousVueApp=this.currentVueApp;}this.currentVueApp=newVueApp;}cleanupPreviousPages(){const appElement=document.getElementById('app');if(!appElement)return;const exitingContainers=appElement.querySelectorAll('.page-container.page-exiting');exitingContainers.forEach(container=>{if(container.parentNode){container.remove();}});if(this.previousVueApp){try{this.previousVueApp.unmount();}catch(error){console.debug('Previous Vue app already unmounted:',error);}this.previousVueApp=null;}const loadingElement=appElement.querySelector('.loading');if(loadingElement){loadingElement.remove();}}applyStyle(css,routeName){const existing=document.querySelector(`style[data-route="${routeName}"]`);if(existing)existing.remove();if(css){const style=document.createElement('style');style.textContent=css;style.setAttribute('data-route',routeName);document.head.appendChild(style);}}navigateTo(routeName,params=null){if(typeof routeName==='object'){params=routeName.params || null;routeName=routeName.route;}if(routeName !==this.currentHash){this.currentQueryParams={};}this.updateURL(routeName,params);}getCurrentRoute(){return this.currentHash;}sanitizeParameter(value){if(typeof value !=='string')return value;let sanitized=value .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,'').replace(/<iframe\b[^<]*(?:(?!<\/iframe>)<[^<]*)*<\/iframe>/gi,'').replace(/<object\b[^<]*(?:(?!<\/object>)<[^<]*)*<\/object>/gi,'').replace(/<embed\b[^<]*(?:(?!<\/embed>)<[^<]*)*<\/embed>/gi,'').replace(/<link\b[^<]*>/gi,'').replace(/<meta\b[^<]*>/gi,'').replace(/javascript:/gi,'').replace(/vbscript:/gi,'').replace(/data:/gi,'').replace(/on\w+\s*=/gi,'').replace(/expression\s*\(/gi,'').replace(/url\s*\(/gi,'');const sqlPatterns=[ /(\b(union|select|insert|update|delete|drop|create|alter|exec|execute|sp_|xp_)\b)/gi,/(;|\||&|\*|%|<|>)/g,/(--|\/\*|\*\/)/g,/(\bor\b.*\b=\b|\band\b.*\b=\b)/gi,/('.*'|".*")/g,/(\\\w+)/g ];for(const pattern of sqlPatterns){sanitized=sanitized.replace(pattern,'');}sanitized=sanitized.replace(/[<>'"&]{2,}/g,'');if(sanitized.length > this.config.security.maxParameterLength){sanitized=sanitized.substring(0,this.config.security.maxParameterLength);}return sanitized.trim();}validateParameter(key,value){if(!this.config.security.enableParameterValidation){return true;}if(typeof key !=='string' || key.length===0){return false;}if(!this.config.security.allowedKeyPattern.test(key)){if(this.config.security.logSecurityWarnings){console.warn(`Invalid parameter key format:${key}`);}return false;}if(key.length > 50){if(this.config.security.logSecurityWarnings){console.warn(`Parameter key too long:${key}`);}return false;}if(value !==null && value !==undefined){if(typeof value==='string'){if(value.length > this.config.security.maxParameterLength){if(this.config.security.logSecurityWarnings){console.warn(`Parameter value too long for key:${key}`);}return false;}const dangerousPatterns=[ /<script|<iframe|<object|<embed/gi,/javascript:|vbscript:|data:/gi,/union.*select|insert.*into|delete.*from/gi,/\.\.\ /[<>'"&]{3,}/g ];for(const pattern of dangerousPatterns){if(pattern.test(value)){if(this.config.security.logSecurityWarnings){console.warn(`Dangerous pattern detected in parameter ${key}:`,value);}return false;}}}else if(Array.isArray(value)){if(value.length > this.config.security.maxArraySize){if(this.config.security.logSecurityWarnings){console.warn(`Parameter array too large for key:${key}`);}return false;}for(const item of value){if(!this.validateParameter(`${key}[]`,item)){return false;}}}}return true;}parseQueryString(queryString){const params={};if(!queryString)return params;const pairs=queryString.split('&');for(const pair of pairs){try{const [rawKey,rawValue]=pair.split('=');if(!rawKey)continue;let key,value;try{key=decodeURIComponent(rawKey);value=rawValue ? decodeURIComponent(rawValue):'';}catch(e){console.warn('Failed to decode URI component:',pair);continue;}if(!this.validateParameter(key,value)){console.warn(`Parameter rejected by security filter:${key}`);continue;}const sanitizedValue=this.sanitizeParameter(value);if(key.endsWith('[]')){const arrayKey=key.slice(0,-2);if(!this.validateParameter(arrayKey,[])){continue;}if(!params[arrayKey])params[arrayKey]=[];if(params[arrayKey].length < this.config.security.maxArraySize){params[arrayKey].push(sanitizedValue);}else{if(this.config.security.logSecurityWarnings){console.warn(`Array parameter ${arrayKey}size limit exceeded`);}}}else{params[key]=sanitizedValue;}}catch(error){console.warn('Error parsing query parameter:',pair,error);}}const paramCount=Object.keys(params).length;if(paramCount > this.config.security.maxParameterCount){if(this.config.security.logSecurityWarnings){console.warn(`Too many parameters(${paramCount}). Limiting to first ${this.config.security.maxParameterCount}.`);}const limitedParams={};let count=0;for(const [key,value] of Object.entries(params)){if(count >=this.config.security.maxParameterCount)break;limitedParams[key]=value;count++;}return limitedParams;}return params;}buildQueryString(params){if(!params || Object.keys(params).length===0)return '';const pairs=[];for(const [key,value] of Object.entries(params)){if(Array.isArray(value)){for(const item of value){pairs.push(`${encodeURIComponent(key)}[]=${encodeURIComponent(item)}`);}}else if(value !==undefined && value !==null){pairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);}}return pairs.join('&');}hasQueryParamsChanged(newParams){if(!this.currentQueryParams && !newParams)return false;if(!this.currentQueryParams || !newParams)return true;const oldKeys=Object.keys(this.currentQueryParams);const newKeys=Object.keys(newParams);if(oldKeys.length !==newKeys.length)return true;for(const key of oldKeys){if(JSON.stringify(this.currentQueryParams[key])!==JSON.stringify(newParams[key])){return true;}}return false;}getQueryParams(){return{...this.currentQueryParams};}getQueryParam(key){return this.currentQueryParams ? this.currentQueryParams[key]:undefined;}setQueryParams(params,replace=false){if(!params || typeof params !=='object'){console.warn('Invalid parameters object provided to setQueryParams');return;}const currentParams=replace ?{}:{...this.currentQueryParams};const sanitizedParams={};for(const [key,value] of Object.entries(params)){if(!this.validateParameter(key,value)){console.warn(`Parameter ${key}rejected by security filter`);continue;}if(value !==undefined && value !==null){if(Array.isArray(value)){sanitizedParams[key]=value.map(item=> this.sanitizeParameter(item));}else{sanitizedParams[key]=this.sanitizeParameter(value);}}}const newParams={...currentParams,...sanitizedParams};for(const key of Object.keys(newParams)){if(newParams[key]===undefined || newParams[key]===null || newParams[key]===''){delete newParams[key];}}if(Object.keys(newParams).length > this.config.security.maxParameterCount){if(this.config.security.logSecurityWarnings){console.warn('Too many query parameters. Some may be ignored.');}return;}this.updateURL(this.currentHash,newParams);}removeQueryParams(keys){const newParams={...this.currentQueryParams};const keysToRemove=Array.isArray(keys)? keys:[keys];for(const key of keysToRemove){delete newParams[key];}this.updateURL(this.currentHash,newParams);}updateURL(route,params=null){const queryParams=params || this.currentQueryParams ||{};const queryString=this.buildQueryString(queryParams);if(this.config.mode==='hash'){let newHash;if(route==='home'){newHash=queryString ? `#/?${queryString}`:'#/';}else{newHash=queryString ? `#/${route}?${queryString}`:`#/${route}`;}if(window.location.hash !==newHash){window.location.hash=newHash;}}else{let newPath;if(route==='home'){newPath=queryString ? `/?${queryString}`:'/';}else{newPath=queryString ? `/${route}?${queryString}`:`/${route}`;}const isSameRoute=window.location.pathname===(route==='home' ? '/':`/${route}`);if(isSameRoute){window.history.replaceState({},'',newPath);}else{window.history.pushState({},'',newPath);}this.handleRouteChange();}}setCache(key,value){const now=Date.now();if(this.config.cacheMode==='lru'){if(this.cache.size >=this.config.maxCacheSize && !this.cache.has(key)){const oldestKey=this.lruOrder.shift();this.cache.delete(oldestKey);this.cacheTimestamps.delete(oldestKey);}const existingIndex=this.lruOrder.indexOf(key);if(existingIndex > -1){this.lruOrder.splice(existingIndex,1);}this.lruOrder.push(key);}this.cache.set(key,value);this.cacheTimestamps.set(key,now);}getFromCache(key){const now=Date.now();const timestamp=this.cacheTimestamps.get(key);if(timestamp &&(now - timestamp)> this.config.cacheTTL){this.cache.delete(key);this.cacheTimestamps.delete(key);if(this.config.cacheMode==='lru'){const index=this.lruOrder.indexOf(key);if(index > -1){this.lruOrder.splice(index,1);}}return null;}const value=this.cache.get(key);if(value && this.config.cacheMode==='lru'){const index=this.lruOrder.indexOf(key);if(index > -1){this.lruOrder.splice(index,1);this.lruOrder.push(key);}}return value;}clearCache(){this.cache.clear();this.cacheTimestamps.clear();this.lruOrder=[];}getCacheStats(){return{size:this.cache.size,maxSize:this.config.maxCacheSize,mode:this.config.cacheMode,ttl:this.config.cacheTTL};}async startPreloading(){console.log(`üöÄ Starting preload for routes:[${this.config.preloadRoutes.join(',')}]`);for(const route of this.config.preloadRoutes){if(!this.preloadedRoutes.has(route)&& route !==this.currentHash){this.preloadQueue.push(route);}}this.processPreloadQueue();}async processPreloadQueue(){if(this.preloadQueue.length===0)return;const routeName=this.preloadQueue.shift();try{console.log(`üîÑ Preloading route:${routeName}`);await this.preloadRoute(routeName);this.preloadedRoutes.add(routeName);console.log(`‚úÖ Preloaded route:${routeName}`);setTimeout(()=> this.processPreloadQueue(),this.config.preloadInterval);}catch(error){console.warn(`‚ö†Ô∏è Failed to preload route ${routeName}:`,error.message);setTimeout(()=> this.processPreloadQueue(),this.config.preloadInterval);}}async preloadRoute(routeName){if(this.getFromCache(`script_${routeName}`)){return;}await this.loadScript(routeName);if(this.config.environment==='development'){try{await this.loadTemplate(routeName);await this.loadStyle(routeName);const script=this.getFromCache(`script_${routeName}`);if(script && script.layout && this.config.useLayout){await this.loadLayout(script.layout);}}catch(error){console.debug(`Optional files not found for ${routeName}:`,error.message);}}}preloadSpecificRoute(routeName){if(!this.preloadedRoutes.has(routeName)&& routeName !==this.currentHash){this.preloadQueue.unshift(routeName);this.processPreloadQueue();}}}