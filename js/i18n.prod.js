class I18n{constructor(options={}){this.config={enabled:options.enabled !==undefined ? options.enabled:true,defaultLanguage:options.defaultLanguage || 'ko',fallbackLanguage:options.fallbackLanguage || 'ko',cacheKey:options.cacheKey || 'viewlogic_lang',debug:options.debug || false};this.messages=new Map();this.currentLanguage=this.config.defaultLanguage;this.isLoading=false;this.loadPromises=new Map();this.listeners={languageChanged:[]};this.initPromise=this.init();}async init(){if(!this.config.enabled){this.log('I18n system disabled');return;}this.loadLanguageFromCache();this.loadLanguageFromQuery();this.log('I18n system initialized',{currentLanguage:this.currentLanguage});try{await this.loadMessages(this.currentLanguage);this.log('Initial language file loaded successfully:',this.currentLanguage);}catch(error){this.log('Failed to load initial language file:',error);}}loadLanguageFromCache(){try{const cachedLang=localStorage.getItem(this.config.cacheKey);if(cachedLang && this.isValidLanguage(cachedLang)){this.currentLanguage=cachedLang;this.log('Language loaded from cache:',cachedLang);}}catch(error){this.log('Failed to load language from cache:',error);}}loadLanguageFromQuery(){if(typeof window !=='undefined'){if(window.router && window.router.getQueryParam){const langFromQuery=window.router.getQueryParam('lang');if(langFromQuery && this.isValidLanguage(langFromQuery)){this.setLanguage(langFromQuery);this.log('Language loaded from query via router:',langFromQuery);return;}}const urlParams=new URLSearchParams(window.location.search);const langFromUrl=urlParams.get('lang');if(langFromUrl && this.isValidLanguage(langFromUrl)){this.setLanguage(langFromUrl);this.log('Language loaded from URL directly:',langFromUrl);}}}isValidLanguage(lang){return typeof lang==='string' && /^[a-z]{2}$/.test(lang);}getCurrentLanguage(){return this.currentLanguage;}async setLanguage(language){if(!this.isValidLanguage(language)){this.log('Invalid language code:',language);return false;}if(this.currentLanguage===language){this.log('Language already set to:',language);return true;}const oldLanguage=this.currentLanguage;this.currentLanguage=language;try{await this.loadMessages(language);this.saveLanguageToCache(language);this.emit('languageChanged',{from:oldLanguage,to:language,messages:this.messages.get(language)});this.log('Language changed successfully',{from:oldLanguage,to:language});return true;}catch(error){this.currentLanguage=oldLanguage;this.log('Failed to change language:',error);return false;}}saveLanguageToCache(language){try{localStorage.setItem(this.config.cacheKey,language);this.log('Language saved to cache:',language);}catch(error){this.log('Failed to save language to cache:',error);}}async loadMessages(language){if(this.messages.has(language)){this.log('Messages already loaded for:',language);return this.messages.get(language);}if(this.loadPromises.has(language)){this.log('Messages loading in progress for:',language);return await this.loadPromises.get(language);}const loadPromise=this._loadMessagesFromFile(language);this.loadPromises.set(language,loadPromise);try{const messages=await loadPromise;this.messages.set(language,messages);this.loadPromises.delete(language);this.log('Messages loaded successfully for:',language);return messages;}catch(error){this.loadPromises.delete(language);throw error;}}async _loadMessagesFromFile(language){try{const module=await import(`../i18n/${language}.js`);return module.default || module;}catch(error){this.log('Failed to load messages file for:',language,error);if(language !==this.config.fallbackLanguage){this.log('Trying fallback language:',this.config.fallbackLanguage);return await this._loadMessagesFromFile(this.config.fallbackLanguage);}throw new Error(`Failed to load messages for language:${language}`);}}t(key,params={}){if(!this.config.enabled){return key;}const messages=this.messages.get(this.currentLanguage);if(!messages){this.log('No messages loaded for current language:',this.currentLanguage);return key;}const message=this.getNestedValue(messages,key);if(message===undefined){this.log('Translation not found for key:',key);const fallbackMessages=this.messages.get(this.config.fallbackLanguage);if(fallbackMessages && this.currentLanguage !==this.config.fallbackLanguage){const fallbackMessage=this.getNestedValue(fallbackMessages,key);if(fallbackMessage !==undefined){return this.interpolate(fallbackMessage,params);}}return key;}return this.interpolate(message,params);}getNestedValue(obj,path){return path.split('.').reduce((current,key)=>{return current && current[key] !==undefined ? current[key]:undefined;},obj);}interpolate(message,params){if(typeof message !=='string'){return message;}return message.replace(/\{(\w+)\}/g,(match,key)=>{return params.hasOwnProperty(key)? params[key]:match;});}plural(key,count,params={}){const pluralKey=count===1 ? `${key}.singular`:`${key}.plural`;return this.t(pluralKey,{...params,count});}getAvailableLanguages(){return ['ko','en'];}on(event,callback){if(this.listeners[event]){this.listeners[event].push(callback);}}off(event,callback){if(this.listeners[event]){const index=this.listeners[event].indexOf(callback);if(index > -1){this.listeners[event].splice(index,1);}}}emit(event,data){if(this.listeners[event]){this.listeners[event].forEach(callback=>{try{callback(data);}catch(error){this.log('Error in event listener:',error);}});}}getMessages(){return this.messages.get(this.currentLanguage)||{};}formatDate(date,options={}){const locale=this.currentLanguage==='ko' ? 'ko-KR':'en-US';return new Intl.DateTimeFormat(locale,options).format(new Date(date));}formatNumber(number,options={}){const locale=this.currentLanguage==='ko' ? 'ko-KR':'en-US';return new Intl.NumberFormat(locale,options).format(number);}log(...args){if(this.config.debug){console.log('[I18n]',...args);}}isEnabled(){return this.config.enabled;}async isReady(){if(!this.config.enabled){return true;}try{await this.initPromise;return true;}catch(error){this.log('I18n initialization failed:',error);return false;}}updateConfig(newConfig){this.config={...this.config,...newConfig};if(newConfig.hasOwnProperty('enabled')){if(newConfig.enabled && !this.isInitialized){this.init();}}this.log('Config updated:',this.config);}async initialize(){if(!this.config.enabled){this.log('I18n system is disabled,skipping initialization');return true;}try{await this.initPromise;this.log('I18n system fully initialized');return true;}catch(error){this.log('Failed to initialize I18n system:',error);return false;}}}const userConfig=(typeof window !=='undefined' && window.I18nConfig)? window.I18nConfig:{};const defaultConfig={enabled:true,defaultLanguage:'ko',fallbackLanguage:'ko',debug:true};const finalConfig={...defaultConfig,...userConfig};if(typeof window !=='undefined'){window.i18n=new I18n(finalConfig);}export default I18n;