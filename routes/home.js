const STYLE_ID = 'route-style-home';const STYLE_CONTENT = `.home-page{\n    padding: 20px;\n    max-width: 1200px;\n    margin: 0 auto;\n    background: white;\n    border-radius: 8px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n.home-page h1{\n    color: #333;\n    margin-bottom: 20px;\n    font-size: 2.5rem;\n    text-align: center;\n}\n\n.home-content{\n    padding: 20px;\n}\n\n.home-content > p{\n    font-size: 1.2rem;\n    text-align: center;\n    margin-bottom: 20px;\n    color: #666;\n}\n\n.home-message{\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    padding: 20px;\n    border-radius: 12px;\n    text-align: center;\n    margin-bottom: 30px;\n    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n}\n\n.home-message p{\n    margin: 0;\n    font-size: 1.1rem;\n}\n\n.features{\n    background: #f8f9fa;\n    padding: 20px;\n    border-radius: 8px;\n    margin-bottom: 30px;\n}\n\n.features h3{\n    color: #333;\n    margin-bottom: 15px;\n}\n\n.features ul{\n    list-style-type: none;\n    padding-left: 0;\n}\n\n.features li{\n    padding: 8px 0;\n    border-bottom: 1px solid #eee;\n}\n\n.features li:before{\n    content: "✓ ";\n    color: #28a745;\n    font-weight: bold;\n}\n\n.home-actions{\n    text-align: center;\n    margin-top: 30px;\n}\n\n.home-actions button{\n    background: #007bff;\n    color: white;\n    border: none;\n    padding: 12px 24px;\n    border-radius: 4px;\n    cursor: pointer;\n    margin: 0 10px;\n    font-size: 1rem;\n    transition: background 0.3s;\n}\n\n.home-actions button:hover{\n    background: #0056b3;\n}\n\n@media (max-width: 768px){\n    .home-page{\n        padding: 15px;\n        margin: 10px;\n}\n    \n    .home-page h1{\n        font-size: 2rem;\n}\n    \n    .home-actions button{\n        display: block;\n        width: 100%;\n        margin: 10px 0;\n}\n}`;if (typeof document !== 'undefined' && !document.getElementById(STYLE_ID)){const styleElement = document.createElement('style');styleElement.id = STYLE_ID;styleElement.textContent = STYLE_CONTENT;document.head.appendChild(styleElement);}const component ={name: "Home",
layout: "default",
pageTitle: "Home - ViewLogic",
showHeader: true,
headerTitle: "ViewLogic App",
headerSubtitle: "Vue 3 Compatible Router System with Components",
data(){return{message: 'Vue 3 컴포넌트로 동작중입니다!',actionLoading: false,showModal: false,modalInput: '',demoInput: '',activeTab: 'demo1',features: ['해시 기반 라우팅','동적 Vue SFC 조합','뷰/로직/스타일 완전 분리','Vue 3 Composition API 지원','Vue 스타일 데이터 바인딩','레이아웃 시스템 지원','재사용 가능한 컴포넌트 시스템','로딩 상태 관리','에러 처리 시스템'],tabsData: [{name: 'demo1',label: '컴포넌트 데모',icon: '🧩'},{name: 'demo2',label: '기능 목록',icon: '📋'}],componentFeatures: [{name: 'Button',description: '다양한 스타일과 상태를 가진 버튼 컴포넌트',status: '완료'},{name: 'Modal',description: '모달 다이얼로그 컴포넌트',status: '완료'},{name: 'Card',description: '콘텐츠를 카드 형태로 표시하는 컴포넌트',status: '완료'},{name: 'Toast',description: '알림 메시지 컴포넌트',status: '완료'},{name: 'Input',description: '다양한 타입의 입력 필드 컴포넌트',status: '완료'},{name: 'Tabs',description: '탭 네비게이션 컴포넌트',status: '완료'}]}},
methods:{async handleAction(){this.actionLoading = true;this.message = 'Vue 3 반응형 시스템이 정상 작동합니다! 🎉'await new Promise(resolve => setTimeout(resolve, 2000));this.actionLoading = false;this.message = 'Vue 3 + 컴포넌트 시스템으로 완벽하게 동작합니다!'setTimeout(() =>{this.message = 'Vue 3 컴포넌트로 동작중입니다!'}, 3000)},
showToast(){if (this.$refs.toast){this.$refs.toast.success('컴포넌트 시스템이 정상적으로 작동하고 있습니다!',{title: '성공',duration: 4000});}},
handleModalConfirm(){console.log('모달 확인:', this.modalInput);this.showModal = false;if (this.$refs.toast){this.$refs.toast.info(`모달 입력값: ${this.modalInput || '(비어있음)'}`,{title: '모달 확인됨'});}},
handleModalCancel(){console.log('모달 취소됨');this.modalInput = '';},
onTabChange(data){console.log('탭 변경:', data);if (this.$refs.toast){this.$refs.toast.info(`'${data.tab.label}' 탭으로 이동했습니다`,{duration: 2000});}},},
mounted(){setTimeout(() =>{if (this.$refs.toast){this.$refs.toast.success('컴포넌트 시스템이 로드되었습니다!',{title: '시스템 준비 완료',duration: 3000});}}, 1000);},
_routeName: "home",
_isBuilt: true,
_buildTime: "2025-08-19T11:09:14.594Z",
_buildVersion: "1.0.0",};component.template = `<nav class="main-nav">\n    <ul>\n        <li><a @click="navigateTo('home')" :class="{active: currentRoute === 'home'}">Home</a></li>\n        <li><a @click="navigateTo('about')" :class="{active: currentRoute === 'about'}">About</a></li>\n        <li><a @click="navigateTo('contact')" :class="{active: currentRoute === 'contact'}">Contact</a></li>\n    </ul>\n</nav>\n\n<header v-if="showHeader" class="page-header">\n    <div class="container">\n        <h1>{{headerTitle || pageTitle}}</h1>\n        <p v-if="headerSubtitle" class="subtitle">{{headerSubtitle}}</p>\n    </div>\n</header>\n\n<main class="main-content">\n    <div class="container">\n        <!-- 페이지 콘텐츠가 여기에 삽입됩니다 -->\n        <div class="home-page">\n    <div class="hero-section">\n        <h2>Welcome to ViewLogic</h2>\n        <p>Vue SFC 호환 라우터에 오신 것을 환영합니다!</p>\n    </div>\n    \n    <div class="home-content">\n        <Card \n            title="ViewLogic Router" \n            subtitle="Vue 3 호환 라우터 시스템"\n            :hoverable="true"\n            shadow="medium"\n        >\n            <p><strong>{{message || 'Vue 스타일 컴포넌트로 동작중입니다!'}}</strong></p>\n            \n            <template #footer>\n                <div class="card-tags">\n                    <span class="card-tag tag-primary">Vue 3</span>\n                    <span class="card-tag tag-success">Router</span>\n                </div>\n            </template>\n        </Card>\n        \n        <Card \n            title="주요 기능" \n            :hoverable="true"\n            shadow="small"\n            style="margin-top: 1rem;"\n        >\n            <ul>\n                <li v-for="feature in features" :key="feature">{{feature}}</li>\n            </ul>\n        </Card>\n        \n        <div class="home-actions" style="margin-top: 2rem;display: flex;gap: 1rem;flex-wrap: wrap;justify-content: center;">\n            <Button \n                variant="primary" \n                size="medium"\n                @click="navigateTo('about')"\n                icon="📖"\n            >\n                About 페이지\n            </Button>\n            \n            <Button \n                variant="secondary" \n                size="medium"\n                @click="navigateTo('contact')"\n                icon="📞"\n            >\n                Contact 페이지\n            </Button>\n            \n            <Button \n                variant="outline" \n                size="medium"\n                :loading="actionLoading"\n                @click="handleAction"\n                icon="🚀"\n            >\n                테스트 액션\n            </Button>\n\n            <Button \n                variant="success" \n                size="medium"\n                @click="showToast"\n                icon="💬"\n            >\n                알림 테스트\n            </Button>\n\n            <Button \n                variant="warning" \n                size="medium"\n                @click="showModal = true"\n                icon="🔧"\n            >\n                모달 테스트\n            </Button>\n        </div>\n\n        <!-- 탭 컴포넌트 데모 -->\n        <div style="margin-top: 3rem;">\n            <Tabs \n                v-model="activeTab" \n                :tabs="tabsData" \n                variant="underline"\n                @tab-change="onTabChange"\n            >\n                <template #demo1>\n                    <div style="padding: 1rem;">\n                        <h4>컴포넌트 데모</h4>\n                        <p>이것은 탭 컴포넌트의 첫 번째 패널입니다.</p>\n                        \n                        <Input \n                            v-model="demoInput"\n                            label="데모 입력"\n                            placeholder="여기에 입력해보세요"\n                            help-text="컴포넌트 시스템이 정상적으로 작동하고 있습니다"\n                            clearable\n                        />\n                    </div>\n                </template>\n                \n                <template #demo2>\n                    <div style="padding: 1rem;">\n                        <h4>기능 목록</h4>\n                        <div style="display: grid;grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));gap: 1rem;margin-top: 1rem;">\n                            <Card \n                                v-for="feature in componentFeatures" \n                                :key="feature.name"\n                                :title="feature.name"\n                                :content="feature.description"\n                                :tags="[feature.status]"\n                                hoverable\n                                clickable\n                                shadow="small"\n                            />\n                        </div>\n                    </div>\n                </template>\n            </Tabs>\n        </div>\n\n        <!-- 모달 컴포넌트 -->\n        <Modal \n            v-model="showModal"\n            title="컴포넌트 시스템 테스트"\n            size="medium"\n            @confirm="handleModalConfirm"\n            @cancel="handleModalCancel"\n        >\n            <p>이것은 모달 컴포넌트 테스트입니다.</p>\n            <p>ViewLogic의 컴포넌트 시스템이 정상적으로 작동하고 있습니다!</p>\n            \n            <Input \n                v-model="modalInput"\n                label="모달 내 입력"\n                placeholder="모달에서도 컴포넌트가 작동합니다"\n                style="margin-top: 1rem;"\n            />\n        </Modal>\n\n        <!-- Toast 컴포넌트 -->\n        <Toast ref="toast" position="top-right" />\n    </div>\n</div>\n    </div>\n</main>\n\n<footer class="page-footer">\n    <div class="container">\n        <p>&copy;2025 ViewLogic App. All rights reserved.</p>\n    </div>\n</footer>`;export default component;